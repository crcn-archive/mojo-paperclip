// Generated by CoffeeScript 1.6.2
var BaseBinding, Collection,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseBinding = require("./base/index");

Collection = (function(_super) {
  __extends(Collection, _super);

  /*
  */


  function Collection(node, _source) {
    this.node = node;
    this._source = _source != null ? _source : [];
  }

  /*
  */


  Collection.prototype.push = function() {
    var _ref;

    return (_ref = this._source).push.apply(_ref, arguments);
  };

  /*
  */


  Collection.prototype.bind = function(context) {
    var binding, _i, _len, _ref;

    this.context = context;
    if (this._bound) {
      return;
    }
    this._bound = true;
    _ref = this._source;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      binding = _ref[_i];
      binding.bind(this.context);
    }
  };

  /*
  */


  Collection.prototype.unbind = function() {
    var binding, _i, _len, _ref;

    if (!this._bound) {
      return;
    }
    this._bound = false;
    _ref = this._source;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      binding = _ref[_i];
      binding.unbind();
    }
  };

  return Collection;

})(BaseBinding);

module.exports = Collection;
