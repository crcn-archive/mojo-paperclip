// Generated by CoffeeScript 1.6.2
var BaseNodeBinding,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseNodeBinding = (function(_super) {
  __extends(BaseNodeBinding, _super);

  /*
  */


  function BaseNodeBinding(options) {
    this.name = options.name || this.name;
    this.node = options.node;
    this.value = options.value;
    this.nodeModel = options.context;
  }

  /*
  */


  BaseNodeBinding.prototype.bind = function(context) {
    this.context = context;
  };

  /*
  */


  BaseNodeBinding.prototype.unbind = function() {};

  return BaseNodeBinding;

})(require("../../base"));

module.exports = BaseNodeBinding;
