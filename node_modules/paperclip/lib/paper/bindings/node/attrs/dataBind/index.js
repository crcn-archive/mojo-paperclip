// Generated by CoffeeScript 1.6.2
var AttrDataBinding, BindingCollection, Clip, dataBindingClasses,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Clip = require("../../../../../clip");

BindingCollection = require("../../../collection");

dataBindingClasses = {
  show: require("./handlers/show"),
  css: require("./handlers/css"),
  style: require("./handlers/style"),
  disable: require("./handlers/disable"),
  enable: require("./handlers/enable"),
  value: require("./handlers/value"),
  model: require("./handlers/model"),
  click: require("./handlers/event"),
  submit: require("./handlers/event"),
  mousedown: require("./handlers/event"),
  mouseup: require("./handlers/event"),
  mouseover: require("./handlers/event"),
  mouseout: require("./handlers/event"),
  keydown: require("./handlers/event"),
  keyup: require("./handlers/event"),
  enter: require("./handlers/enter"),
  "delete": require("./handlers/delete"),
  onClick: require("./handlers/event"),
  onLoad: require("./handlers/event"),
  onSubmit: require("./handlers/event"),
  onMouseDown: require("./handlers/event"),
  onMouseUp: require("./handlers/event"),
  onMouseOver: require("./handlers/event"),
  onMouseOut: require("./handlers/event"),
  onKeyDown: require("./handlers/event"),
  onKeyUp: require("./handlers/event"),
  onEnter: require("./handlers/enter"),
  onChange: require("./handlers/change"),
  onDelete: require("./handlers/delete")
};

AttrDataBinding = (function(_super) {
  __extends(AttrDataBinding, _super);

  /*
  */


  AttrDataBinding.prototype.type = "attr";

  /*
  */


  function AttrDataBinding(options) {
    var bc, scriptName, _i, _len, _ref;

    AttrDataBinding.__super__.constructor.call(this, options);
    this.clip = new Clip({
      scripts: options.value[0],
      watch: false,
      context: options.context
    });
    this._bindings = new BindingCollection();
    _ref = this.clip.scripts.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      scriptName = _ref[_i];
      if (!(bc = dataBindingClasses[scriptName])) {
        continue;
      }
      this._bindings.push(new bc(this.node, this.clip, scriptName));
    }
  }

  /*
  */


  AttrDataBinding.prototype.bind = function(context) {
    this.context = context;
    this.clip.reset(this.context, false);
    return this._bindings.bind(this.context);
  };

  /*
  */


  AttrDataBinding.prototype.unbind = function() {
    return this._bindings.unbind();
  };

  return AttrDataBinding;

})(require("../../base"));

module.exports = AttrDataBinding;

module.exports.register = function(name, dataBindClass) {
  return dataBindingClasses[name] = dataBindClass;
};
