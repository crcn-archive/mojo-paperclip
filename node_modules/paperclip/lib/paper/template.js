// Generated by CoffeeScript 1.6.2
var Loader, Template, nofactor, tpl;

nofactor = require("nofactor");

Loader = require("./loader");

Template = (function() {
  /*
  */
  function Template(paper, nodeFactory) {
    this.paper = paper;
    this.nodeFactory = nodeFactory;
  }

  /*
  */


  Template.prototype.bind = function(context) {
    return new Loader(this).load(context).bind();
  };

  return Template;

})();

Template.prototype.creator = module.exports = tpl = function(paperOrSrc, nodeFactory) {
  var paper;

  if (nodeFactory == null) {
    nodeFactory = nofactor["default"];
  }
  if (typeof paperOrSrc === "string") {
    if (!tpl.compiler) {
      throw new Error("template must be a function");
    }
    paper = tpl.compiler.compile(paperOrSrc, {
      "eval": true
    });
  } else {
    paper = paperOrSrc;
  }
  return new Template(paper, nodeFactory);
};
