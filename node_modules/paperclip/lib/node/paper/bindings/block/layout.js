// Generated by CoffeeScript 1.6.2
var LayoutBlockBinding, fs, path, pc, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

path = require("path");

pc = require("../../../../browser");

fs = require("fs");

LayoutBlockBinding = (function(_super) {
  __extends(LayoutBlockBinding, _super);

  function LayoutBlockBinding() {
    _ref = LayoutBlockBinding.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  LayoutBlockBinding.prototype._onChange = function(value) {
    var loader, orgPath, realPath, tpl, tplPath;

    tplPath = value.path || value;
    orgPath = this.context.get("path");
    realPath = path.join(path.dirname(orgPath), tplPath);
    tpl = pc.template(fs.readFileSync(realPath, "utf8"));
    loader = tpl.bind({
      content: this.contentTemplate.bind(this.context).section.toFragment()
    });
    return this.section.replaceChildNodes(loader.section.toFragment());
  };

  return LayoutBlockBinding;

})(require("./base"));

module.exports = LayoutBlockBinding;
