// Generated by CoffeeScript 1.6.2
var Binding, RootExpression,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RootExpression = require("./root");

Binding = (function(_super) {
  __extends(Binding, _super);

  Binding.prototype._type = "binding";

  /*
  */


  function Binding(script, children, childBinding) {
    this.script = script;
    Binding.__super__.constructor.call(this);
    this.children = new RootExpression(children, false);
    if (childBinding) {
      this.childBinding = new RootExpression(childBinding, false);
    }
    this.addChild(this.children);
  }

  /*
  */


  Binding.prototype.toJsString = function() {
    return "this." + (this.toMethodString());
  };

  /*
  */


  Binding.prototype.toString = function() {
    return "" + (this.toMethodString());
  };

  /*
  */


  Binding.prototype.toMethodString = function() {
    var buffer;

    buffer = ["block(" + this.script + ", " + (this.children.toString())];
    if (this.childBinding) {
      buffer.push(", " + (this.childBinding.toString()));
    }
    buffer.push(")");
    return buffer.join("");
  };

  return Binding;

})(require("./base"));

module.exports = Binding;
