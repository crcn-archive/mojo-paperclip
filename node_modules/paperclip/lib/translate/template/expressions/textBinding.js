// Generated by CoffeeScript 1.6.2
var TextBindingExpression,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

TextBindingExpression = (function(_super) {
  __extends(TextBindingExpression, _super);

  TextBindingExpression.prototype._type = "textBinding";

  TextBindingExpression.prototype._method = "textBinding";

  TextBindingExpression.prototype._binding = true;

  /*
  */


  function TextBindingExpression(binding) {
    this.binding = binding;
    TextBindingExpression.__super__.constructor.call(this);
  }

  /*
  */


  TextBindingExpression.prototype.toString = function() {
    return "block(" + this.binding + ")";
  };

  return TextBindingExpression;

})(require("./base"));

module.exports = TextBindingExpression;
