// Generated by CoffeeScript 1.6.2
var CollectionExpression, base,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

base = require("./expression");

CollectionExpression = (function(_super) {
  __extends(CollectionExpression, _super);

  /*
  */


  CollectionExpression.prototype._type = "collection";

  /*
  */


  function CollectionExpression(items) {
    this.items = items;
    CollectionExpression.__super__.constructor.call(this);
    this.addChild.apply(this, this.items);
  }

  /*
  */


  CollectionExpression.prototype.toString = function() {
    return this.map("toString", "");
  };

  /*
  */


  CollectionExpression.prototype.map = function(method, join) {
    if (join == null) {
      join = "";
    }
    return this.items.map(function(item) {
      return item[method].call(item);
    }).join(join);
  };

  return CollectionExpression;

})(base.Expression);

module.exports = CollectionExpression;
