// Generated by CoffeeScript 1.6.2
var FnExpression, base,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

base = require("../../base/expression");

FnExpression = (function(_super) {
  __extends(FnExpression, _super);

  /*
  */


  FnExpression.prototype._type = "fn";

  /*
  */


  function FnExpression(name, params) {
    this.name = name;
    this.params = params;
    FnExpression.__super__.constructor.call(this);
    this.addChild(this.params);
  }

  /*
  */


  FnExpression.prototype.toString = function() {
    return this.name;
  };

  return FnExpression;

})(base.Expression);

module.exports = FnExpression;
