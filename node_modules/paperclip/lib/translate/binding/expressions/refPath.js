// Generated by CoffeeScript 1.6.2
var CollectionExpression, RefPathExpression,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

CollectionExpression = require("../../base/collectionExpression");

RefPathExpression = (function(_super) {
  __extends(RefPathExpression, _super);

  /*
  */


  RefPathExpression.prototype._type = "refPath";

  /*
  */


  function RefPathExpression(items, castAs, assign) {
    this.castAs = castAs;
    this.assign = assign != null ? assign : "";
    RefPathExpression.__super__.constructor.call(this, items);
  }

  /*
  */


  RefPathExpression.prototype.toPathString = function() {
    return this.items.join(".");
  };

  /*
  */


  RefPathExpression.prototype.toString = function() {
    var buffer, currentChain, part, self, _i, _len, _ref;

    buffer = ["this"];
    currentChain = [];
    self = false;
    if (this.castAs) {
      buffer.push(".castAs('" + this.castAs + "')");
    }
    _ref = this.items;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      part = _ref[_i];
      if (part._type === "fn") {
        this._pushRef(buffer, currentChain, self);
        buffer.push(".call('", part.name, "', [");
        buffer.push(part.params.toString(), "])");
        currentChain = [];
        self = false;
      } else {
        currentChain.push(part.name);
        self = self || part.self;
      }
    }
    this._pushRef(buffer, currentChain, self);
    buffer.push(".value(" + this.assign + ")");
    return buffer.join("");
  };

  /*
  */


  RefPathExpression.prototype._pushRef = function(buffer, chain, self) {
    var command;

    if (chain.length) {
      command = self ? "self" : "ref";
      return buffer.push("." + command + "('", chain.join("."), "')");
    }
  };

  return RefPathExpression;

})(CollectionExpression);

module.exports = RefPathExpression;
