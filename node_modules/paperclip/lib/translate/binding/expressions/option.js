// Generated by CoffeeScript 1.6.2
var OptionExpression, base,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

base = require("../../base/expression");

OptionExpression = (function(_super) {
  __extends(OptionExpression, _super);

  /*
  */


  OptionExpression.prototype._type = "option";

  /*
  */


  function OptionExpression(name, expression) {
    this.name = name;
    this.expression = expression;
    OptionExpression.__super__.constructor.call(this);
    this.addChild(expression);
  }

  OptionExpression.prototype.toString = function() {
    return "'" + this.name + "':" + this.expression;
  };

  return OptionExpression;

})(base.Expression);

module.exports = OptionExpression;
