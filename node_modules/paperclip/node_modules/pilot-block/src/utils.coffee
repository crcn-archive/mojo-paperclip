###
###

exports.moveChildren = (from, after) ->
  return unless after.appendChild
  after.appendChild exports.fragment from

###
###

exports.copySiblings = (child, to) ->

  siblings = []
  while child
    siblings.push child
    child = child.nextSibling

  for sibling in siblings
    to.appendChild sibling

  to



###
###

exports.fragment = (from) ->

  frag = document.createDocumentFragment()

  # move over to the document fragment
  while from.childNodes.length
    frag.appendChild from.childNodes[0]

  frag


###
###

exports.copyElements = (elements) ->
  frag = document.createDocumentFragment()

  # move over to the document fragment
  for child in elements
    continue if not child
    frag.appendChild child.cloneNode true

  frag


###
###

exports.insertAfter = (element, after) ->
  parent = after.parentNode
  if after is parent.lastChild
    parent.appendChild element
  else
    parent.insertBefore element, after.nextSibling

###
###


exports.createElements = (content) ->
  frag  = document.createDocumentFragment()
  doc = document.createElement("div")
  $(doc).html(exports.guardComments(content))
  while doc.childNodes.length
    frag.appendChild doc.childNodes[0]

  frag



### 
###

exports.arrayToFragment = (children) ->
  frag = document.createDocumentFragment()
  for child in children
    frag.appendChild child
  frag


###
 guard the comments from IE 
###

exports.guardComments = (content) -> String(content or "").replace /(\{g\})*<!--/g, "\{g\}<!--"

###
###

exports.unguardComments = (element) ->
  
  for child in element.childNodes
    exports.unguardComments child

  if element.nodeName is "#text"
    if ~element.nodeValue.indexOf("{g}")
      element.nodeValue = element.nodeValue.replace(/\{g\}/g,"")







###
###

exports.removeAllChildren = (element) ->
  return unless element.childNodes
  while element.childNodes.length
    element.removeChild element.childNodes[0]
