// Generated by CoffeeScript 1.6.3
var PaperclipViewDecorator, paperclip, type,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

paperclip = require("paperclip");

type = require("type-component");

PaperclipViewDecorator = (function() {
  /*
  */

  function PaperclipViewDecorator(view) {
    this.view = view;
    this.remove = __bind(this.remove, this);
    this.render = __bind(this.render, this);
    this._onTemplateChange = __bind(this._onTemplateChange, this);
    this.view.on("render", this.render);
    this.view.on("remove", this.remove);
    this.view._define("paper");
    this.view.bind("paper").to(this._onTemplateChange).now();
  }

  /*
  */


  PaperclipViewDecorator.prototype._onTemplateChange = function(template) {
    if (type(template) !== "function") {
      throw new Error("paper template must be a function for view \"" + this.view.constructor.name + "\"");
    }
    this.template = paperclip.template(template, this.view.application);
    if (this._rendered) {
      this.remove(true);
      return this.render();
    }
  };

  /*
  */


  PaperclipViewDecorator.prototype.render = function() {
    this.remove(true);
    this._rendered = true;
    if (!this.template) {
      return;
    }
    return this.view.section.append((this.content = this.template.bind(this.view)).toFragment());
  };

  /*
  */


  PaperclipViewDecorator.prototype.remove = function(hard) {
    if (!this.content) {
      return;
    }
    if (hard) {
      return this.content.dispose();
    } else {
      return this.content.unbind();
    }
  };

  /*
  */


  PaperclipViewDecorator.getOptions = function(view) {
    return view.__isView;
  };

  PaperclipViewDecorator.decorate = function(view, options) {
    return new PaperclipViewDecorator(view, options);
  };

  return PaperclipViewDecorator;

})();

module.exports = function(app) {
  return app.decorator(module.exports.decorator);
};

module.exports.decorator = {
  priority: "render",
  decorator: PaperclipViewDecorator,
  inheritable: false
};
