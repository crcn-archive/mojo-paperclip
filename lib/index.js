// Generated by CoffeeScript 1.6.2
(function() {
  var PaperclipViewDecorator, paperclip, runlater, type,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  paperclip = require("paperclip");

  type = require("type-component");

  runlater = require("runlater").global;

  PaperclipViewDecorator = (function() {
    /*
    */
    function PaperclipViewDecorator(view) {
      this.view = view;
      this.remove = __bind(this.remove, this);
      this.render = __bind(this.render, this);
      this._onTemplateChange = __bind(this._onTemplateChange, this);
      this.view.on("render", this.render);
      this.view.on("remove", this.remove);
      this.view._define("paper");
      this.view.bind("paper", this._onTemplateChange).now();
    }

    /*
    */


    PaperclipViewDecorator.prototype._onTemplateChange = function(template) {
      if (!template) {
        return;
      }
      if (type(template) !== "function") {
        throw new Error("paper template must be a function for view \"" + this.view.constructor.name + "\"");
      }
      this.template = paperclip.template(template, this.view.application);
      if (this._rendered) {
        this.remove(true);
        return this.render();
      }
    };

    /*
    */


    PaperclipViewDecorator.prototype.render = function() {
      this.remove(true);
      this._rendered = true;
      if (!this.template) {
        return;
      }
      return this.view.section.append((this.content = this.template.bind(this.view)).toFragment());
    };

    /*
    */


    PaperclipViewDecorator.prototype.remove = function(hard) {
      var _this = this;

      if (!this.content) {
        return;
      }
      if (hard) {
        return this.content.dispose();
      } else {
        return runlater(function() {
          return _this.content.unbind();
        });
      }
    };

    return PaperclipViewDecorator;

  })();

  module.exports = function(app) {
    return app.decorator(module.exports.decorator);
  };

  module.exports.decorator = {
    priority: "render",
    getOptions: function(view) {
      return view.__isView;
    },
    decorate: function(view, options) {
      return new PaperclipViewDecorator(view, options);
    },
    multi: false
  };

}).call(this);
